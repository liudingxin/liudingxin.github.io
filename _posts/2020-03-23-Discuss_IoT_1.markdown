---
layout: post
title: "传统真空设备的控制技术革新"
date: 2020-03-23 09:00:00 +0800
categories: IoT
---

控制方面提及的这些技术，在其所属领域，都不是新概念，只是自己经过一段时间的学习，和试着把它们引入传统真空设备过程中，得到一些理解和收获，在此略做总结，……

<!--excerpt-->

### 目录

1. 设备层：PLC、Arduino
2. 人机界面：组态屏、串口屏、安卓屏
3. 上位机：组态软件、用 .Net Core 写 WPF
4. Restful：Web 应用

# 设备层

> 设备：空间范围+传感器+执行机构。在这一层上告诉设备做什么动作，同时取得一些数据。

## PLC 或 Arduino

### 品牌

- PLC ：OMRON 欧姆龙（CP1L 系列）、Mitsubishi 三菱（FX3U 系列）、Siemens 西门子（S7-200 系列）
- Arduino ： Arduino 原厂、其他工厂生产

有人可能说 PLC 四大品牌，三个没提。这里注意我们讨论的是——小型设备。不是石油，化工生产线上那种应用场景。
其中，就个人而言我比较喜欢**OMRON 欧姆龙**，除了价格实惠性能稳定外，一个非常特别的原因是，欧姆龙大大小小的电控元件特别齐全：中间继电器、固态继电器、温控表、HMI 组态屏等等。如果有品牌统一癖好（实际我觉得是为了避免选择恐惧症），它是非常好的选择。而且使用欧姆龙的项目里，出现一些小品牌电控元件，也非常平顺。如果使用西门子 PLC，中间顺手放了几个小品牌的接触器进去，感觉很奇怪。

型号后面的括号里，是该品牌在小型设备上的常用系列。

Arduino 就是 Arduino 公司的产品，这方面要特别强调一下，因为它是开源的，所以不存在山寨这么一说。非原厂在同一型号产品里，可能有一些芯片选型不同，在使用时候，也许需要额外安装个驱动。仅此而已。但我还从来没遇到过这种问题。

### 点数与扩展模块

这是 PLC 选型中要考虑的重要因素，一般来说，确定品牌和基础型号之后，接下来就是点数，例如：三菱的 FX3U- 后面要跟的就是点数。

**点数**：包括输入输出一起算。比如控制面板上的开泵、开阀门、开循环水这些按钮都是输入。同样，对应的泵，水阀这些实现功能的单元设备都对应一个输出点。当然，PLC 出来的线路不是直接接在泵上的，往往需要中间继电器，接触器这些基本的电控元件进一步实现控制功能。

**扩展功能**：包括 AD 模块、通讯模块等等...

- AD 模块：诸如真空计、液位计、压力表种种大多会提供 0~5V、0~10V、4~20mA 这样的模拟信号。从对应的引脚上引出两根电源线，接入 AD 模块，然后在 PLC 里写一段转换公式（仪表厂家说明书内提供），就可以读取到仪表的测量值了。
- 通讯模块：做 RS232 或者 485 通讯用的。欧姆龙 CP1L 上额外加上这个模块和组态的控制屏通讯用。

PLC 上一般都预留好了，扩展槽。把模块压进去就行了。挺方便的。

Arduino 也要考虑以上问题，但显然有点不同，它的 IO 口所有的都可以用做高低电平的逻辑输入输出，其中有几个口（带'~'符号的）可以做模拟输入输出。至于作为输入，还是输出。是可以根据需要在 setup()方法里定义的。

```arduino
setup()
{
    pinMode(4,INPUT); //水位上限信号
    pinMode(5,OUTPUT); //测试开关
}
```

当 Arduino 的输入输出口不够用的时候，大概的方法是用引脚更多的型号、用 74HC595 芯片或者通过 ISP/I2C 串转并的方式，扩展。这个我专门写过一篇文章。【整理后连接放在这里】

### 开发语言

- PLC ： 梯形图（根据品牌不同，命令有区别）
- Arduino ：混合{ C 与 C++ }的 C

梯形图是一种图形编程语言，从继电器控制电路图演变而来。记住主要命令比如 LD、MOV 然后再记住一些固定的逻辑样式，相对比较容易上手。（说容易也是看着容易，在你精通之前没有什么东西真的容易，至少不能确定。）难点，我觉得是数字通讯时候取值，哪些值存在寄存器的位置，找到、测试，理解了好一会儿才明白。

Arduino 的 C，学习一下 C 语言基础，理解 Arduino 的程序结构和一些与主板有关的语法，就可以开始编程了。接下来随着引入不同的硬件扩展模块，一般它们都带有自己的类库，学会调用类库，自己要处理的事情就始终不复杂。就像没有在程序中看到 main()函数。因为 Arduino 的 C 帮你把它放在 Arduino.h 里面了。再后来可以试着写一些自己的类库，控制自己设备里的特殊模块。这时候能体会到 C++的语法风格——声明与实现分别放在不同的文件里（.h & .cpp）。

作为一个程序小白的我，到这里发现

```arduino
while(true)
{

}
```

这种程序逻辑，居然是自动化场景下普遍的。以上 PLC、Arduino 以及各种终端设备基本就是一个死循环，除非你关机才强制退出。

### 成本

- PLC ： 大几百块到三四千，根据品牌、点数、扩展模块不同。扩展模块几十，一百多块钱。
- Arduino ：原厂 120 块，其他厂家 10 块到 50 块之间。各种扩展板几十块钱。

（先写到这里，待续...）
<br/>
<br/>
<br/>
<br/>

# HMI 人机界面

## PLC 配套的组态屏、串口屏或者安卓屏

# 上位机

## 组态软件、或者用 .Net Core 写 WPF

# Restful

## ASP .Net Core 或 Ruby on Rails
